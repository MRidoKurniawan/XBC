@model XBC.ViewModel.MenuViewModel

@using (Html.BeginForm("Edit", "Menu", FormMethod.Post, new { id = "form-edit", name = "form-edit", validate = "validate" }))
{
    @Html.HiddenFor(model => model.id)
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <table class="table">
            <tr>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control", @placeholder = "Title", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.EditorFor(model => model.image_url, new { htmlAttributes = new { @class = "form-control", @placeholder = "Image URL" } })
                            @Html.ValidationMessageFor(model => model.image_url, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Title" } })
                            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.menu_order, new { htmlAttributes = new { @class = "form-control", @placeholder = "Menu Order" } })
                            @Html.ValidationMessageFor(model => model.menu_order, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td rowspan="2">
                    <div class="form-group" id="text-deskripsi" style="height:100%">

                        <div class="col-md-10">
                            <textarea class="form-control" name="descriptoin" style="height:12rem; resize:none;" placeholder="Description">@Model.descriptoin</textarea>
                            @Html.ValidationMessageFor(model => model.descriptoin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.menu_parent, (IEnumerable<SelectListItem>)ViewBag.MenuList, "Master", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.menu_parent, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.menu_url, new { htmlAttributes = new { @class = "form-control", @placeholder = "Menu URL" } })
                            @Html.ValidationMessageFor(model => model.menu_url, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    function cekPassword() {
        if ($("#pw-main").val() == $("#pw-second").val() && $("#pw-second").val() != "") {
            cocok = true;
            $("#valid-password").hide();
        } else if ($("#pw-second").val() != "") {
            cocok = false;
            $("#valid-password").show();
        }
    }


    $("#form-edit").submit(function () {
        $.ajax({
            url: this.action,
            type: this.method,
            data: $(this).serialize(),
            success: function (result) {
                if (result.success) {
                    //alert("Save Successfull\nName" + result.entity.Name);
                    $(".modal").modal("hide");
                    $('.tx-info').html("Data successfully saved !")
                    $(".alert").show();
                    GetList();
                }
                else {
                    alert("Error\nName" + result.message);
                }
            }
        });

        return false;
    });
</script>
