@model XBC.ViewModel.BootcampTestTypeViewModel
@{ 
    ViewBag.id = Session["id"];
}

@using (Html.BeginForm("Create", "BootcampTestType", FormMethod.Post, new { id = "form-create", name = "form-create" })) 
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="UserId" id="UserId" value="@ViewBag.id" />
    <div class="form-horizontal">
        <div class="head">
            <h4>Bootcamp Test Type</h4>
        </div>
        <p> </p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-lg-12">
                <input type="text" placeholder="Name" name="name" required class="form-control"/>
                @*@Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-12">
                <textarea class="form-control" name="notes" placeholder="Notes" id="notes" style="max-width:100%; height:7rem"></textarea>
                @*@Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
}
<style>
    .head{
        text-align:center;
        height:25px;
        background-color: #4800ff;
        color:#ffffff;
    }
</style>
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $("#form-create").submit(function () {
        $.ajax({
            url: this.action,
            type: this.method,
            data: $(this).serialize(),
            success: function (result) {
                if (result.success) {
                    alert("Data Successfully Submitted");
                    $(".modal").modal("hide");
                    GetList();
                }
                else {
                    alert("Error!\n" + result.message);
                }
            }
        });
        return false;
    });
</script>