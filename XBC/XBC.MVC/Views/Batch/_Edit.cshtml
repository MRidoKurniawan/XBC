@model XBC.ViewModel.BatchViewModel


@using (Html.BeginForm("Edit", "Batch", FormMethod.Post, new { id = "form-edit", name = "form-edit" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <table class="table">
            <tr>
                <td>
                    <div class="form-group">
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>
                </td>
                <td>  </td>
                <td>
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.roomId, (IEnumerable<SelectListItem>)ViewBag.roomList, "- Choose Room -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.roomId, "", new { @class = "text-danger" })
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.technologyId, (IEnumerable<SelectListItem>)ViewBag.technologyList, "- Choose Technology -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.technologyId, "", new { @class = "text-danger" })
                    </div>
                </td>
                <td>  </td>
                <td>
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.trainerId, (IEnumerable<SelectListItem>)ViewBag.TerainerList, "- Choose Trainer -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.trainerId, "", new { @class = "text-danger" })
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                       @Html.EditorFor(model => model.periodFrom, new { htmlAttributes = new { @type = "date", @class = "form-control", @placeholder = "Period from" } })
                        @Html.ValidationMessageFor(model => model.periodFrom, "", new { @class = "text-danger" })
                    </div>                    
                </td>
                <td>  </td>
                <td>
                    <div class="form-group">
                        @Html.EditorFor(model => model.periodTo, new { htmlAttributes = new { @type = "date", @class = "form-control", @placeholder = "Period To" } })
                        @Html.ValidationMessageFor(model => model.periodTo, "", new { @class = "text-danger" })
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.bootcampTypeId, (IEnumerable<SelectListItem>)ViewBag.BootcampTypeList, "- Choose Bootcamp Type -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.bootcampTypeId, "", new { @class = "text-danger" })
                    </div>
                </td>
                <td>  </td>
                <td>
                    <div class="form-group">
                        @*@Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control" } })*@
                        <textarea class="form-control" name="notes" style="height:7rem; resize:none" placeholder="Notes">@Model.notes</textarea>
                        @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
                    </div>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>  </td>
                <td style="right">
                    <div class="form-group">
                        <div class="">
                            <input type="submit" value="SAVE" class="btn btn-primary" />
                            <button type="button" class="btn btn-primary" data-dismiss="modal">CANCEL</button>
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")


<script type="text/javascript">
    $("#form-edit").submit(function () {
        $.ajax({
            url: this.action,
            type: this.method,
            data: $(this).serialize(),
            success: function (result) {
                if (result.success) {
                    alert("Save successful\nId: " + result.entity.Id +"Name: " + result.entity.Name);
                    $(".modal").modal("hide");
                    GetList();
                }
                else {
                    alert("Error\nName: " + result.message);
                }
            }
        })
        return false;
    });

    $("#technologyId").change(function () {
        console.log($("#technologyId").val());
        $.ajax({
            url: '@Url.Action("ListByTechnology", "Trainer")',
            type: 'get',
            data: { id: $("#technologyId").val() },
            success: function (result) {
                $("#trainerId").html(result);
            }
        });
    });
</script>   