@model XBC.ViewModel.BiodataViewModel

@using (Html.BeginForm("Edit", "Biodata", FormMethod.Post, new { id = "form-edit", name = "form-edit" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="width:55rem">
        <table class="table" style="width:100%">
            <tr>
                <td style="width:20rem;">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.id)
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td colspan="4" style="width:35rem;">
                    <div class="form-group">
                        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                <input type="radio" name="gender" value="M" id="rd-yes" @ViewBag.rdyes /> M
                                <input type="radio" name="gender" value="F" id="rd-no" @ViewBag.rdno /> F
                                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.last_education, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.last_education, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Education" } })
                            @Html.ValidationMessageFor(model => model.last_education, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td colspan="4">
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.bootcamp_test_type, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.DropDownListFor(model => model.bootcamp_test_type,
(IEnumerable<SelectListItem>)ViewBag.BootcampTestTypeList, "Select Bootcamp Test Type", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.bootcamp_test_type, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.educational_level, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.educational_level, new { htmlAttributes = new { @class = "form-control", @placeholder = "Education Level" } })
                            @Html.ValidationMessageFor(model => model.educational_level, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.iq, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.iq, new { htmlAttributes = new { @class = "form-control", @placeholder = "IQ" } })
                            @Html.ValidationMessageFor(model => model.iq, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.du, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.du, new { htmlAttributes = new { @class = "form-control", @placeholder = "DU" } })
                            @Html.ValidationMessageFor(model => model.du, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.nested_logic, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.nested_logic, new { htmlAttributes = new { @class = "form-control", @placeholder = "NL" } })
                            @Html.ValidationMessageFor(model => model.nested_logic, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.join_table, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.join_table, new { htmlAttributes = new { @class = "form-control", @placeholder = "JT" } })
                            @Html.ValidationMessageFor(model => model.join_table, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.graduation_year, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.graduation_year, new { htmlAttributes = new { @class = "form-control", @placeholder = "Graduation Year" } })
                            @Html.ValidationMessageFor(model => model.graduation_year, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td colspan="4">
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.arithmetic, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.arithmetic, new { htmlAttributes = new { @class = "form-control", @placeholder = "Arithmetic" } })
                            @Html.ValidationMessageFor(model => model.arithmetic, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.majors, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.majors, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.majors, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td colspan="4">
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.tro, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.tro, new { htmlAttributes = new { @class = "form-control", @placeholder = "TRO" } })
                            @Html.ValidationMessageFor(model => model.tro, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.gpa, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.gpa, new { htmlAttributes = new { @class = "form-control gpa" } })
                            @Html.ValidationMessageFor(model => model.gpa, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td colspan="4">
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.interviewer, htmlAttributes: new { @class = "control-label col-md-1" })
                            @Html.EditorFor(model => model.interviewer, new { htmlAttributes = new { @class = "form-control", @placeholder = "Interview" } })
                            @Html.ValidationMessageFor(model => model.interviewer, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>

            <tr>
                <td colspan="5">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-1" })
                            <textarea class="form-control" name="notes" placeholder="Notes" style="max-width:100%; height:5rem">@Model.notes</textarea>
                            @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    $("#form-edit").submit(function () {
        if (parseFloat($(".gpa").val()) <= 4 && parseFloat($(".gpa").val()) >= 0) {
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        alert("Save successful!\nNama: " + result.entity.name);
                        $(".modal").modal("hide");
                        GetList();
                    } else {
                        alert("Error!\n" + result.message);
                    }
                }
            });

        }
        else {
            alert("Nilai GPA minimal 0 dan maksimal 4!");
        }
        return false;
    });
</script>
