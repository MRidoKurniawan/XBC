@model IEnumerable<XBC.ViewModel.TestViewModel>

<div style="padding:1rem 0rem 4rem 0rem" class="row">
    <div style="display:inline" class="col-md-6">
        <input style="display:inline; width:70%" type="text" id="txt-search" class="form-control" placeholder="Search by Name..." />
        <button style="display:inline" type="button" id="btn-search" class="btn btn-primary">
            <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
        </button>
    </div>
    <div class="col-md-offset-4 col-md-2">
        <button type="button" id="btn-create-new" class="btn btn-primary">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
        </button>
    </div>
</div>
<p> </p>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>#</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    <!-- Single button -->
                    <div class="btn-group">
                        <button type="button" id="btn-action" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="glyphicon glyphicon-align-justify"></span>
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="btn-edit" href="#" data-id="@item.id">Edit</a></li>
                            <li><a class="btn-delete" href="#" data-id="@item.id">Delete</a></li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<script type="text/javascript">
    $("#btn-create-new").click(function () {
        $.ajax({
            url: '@Url.Action("Create", "Test")',
            type: 'get',
            success: function (result) {
                $(".modal-title").html("Test");
                $(".modal-body").html(result);
                $('.modal').modal('show');
            }
        });
    });

    $(".btn-edit").click(function () {
        $.ajax({
            url: '@Url.Action("Edit", "Test")',
            type: 'get',
            data: { id: $(this).attr("data-id") },
            success: function (result) {
                $(".modal-title").html("Test");
                $(".modal-body").html(result);
                $('.modal').modal('show');
            }
        });
    });

    $(".btn-delete").click(function () {
        $.ajax({
            url: '@Url.Action("Delete", "Test")',
            type: 'get',
            data: { id: $(this).attr("data-id") },
            success: function (result) {
                $(".modal-title").html("Delete");
                $(".modal-body").html(result);
                $('.modal').modal('show');
            }
        });
    });

    $("#btn-search").click(function () {
        $.ajax({
            url: '@Url.Action("List", "Test")',
            type: 'get',
            data: { search: $("#txt-search").val() },
            success: function (result) {
                $("#data-list").html(result);
            }
        });
    });

    $("#txt-search").change(function () {
        $.ajax({
            url: '@Url.Action("List", "Test")',
            type: 'get',
            data: { search: $("#txt-search").val() },
            success: function (result) {
                $("#data-list").html(result);
            }
        });
    });
</script>
